#!/usr/bin/env bash

set -euo pipefail

# Find active nmcli VPN
get_active_nmcli_vpn() {
    nmcli -g NAME,TYPE,DEVICE,STATE con show --active | awk -F: '$2=="vpn" && $4=="activated" {print $1}' | head -n 1
}

# Find active sing-box profile by checking running processes for the config file
get_active_singbox_profile_file() {
    pgrep -af "sing-box run" | sed -n 's/.*run -c [^ ]*\/\([^ ]*\.json\).*/\1/p' | head -n 1 || true
}

# Get active VPN name (nmcli or sing-box)
get_active_vpn_name() {
    local active_nmcli
    active_nmcli=$(get_active_nmcli_vpn)
    if [ -n "$active_nmcli" ]; then
        echo "$active_nmcli"
        return
    fi

    local active_singbox_file
    active_singbox_file=$(get_active_singbox_profile_file)
    if [ -n "$active_singbox_file" ]; then
        # Format the name from 'some-name.json' to 'Some Name'
        basename "$active_singbox_file" .json | sed -e 's/-/ /g' -e 's/\b\(.\)/\u\1/g'
    fi
}


case "${1:-}" in
    status)
        if [ -n "$(get_active_vpn_name)" ]; then
            echo "true"
        else
            echo "false"
        fi
        ;;
    get-connected-name)
        get_active_vpn_name
        ;;
    list)
        active_vpn_name=$(get_active_vpn_name)
        
        # Get nmcli connections as a JSON array
        nmcli_connections=$(nmcli -g NAME,TYPE con show | grep ":vpn$" || true)
        nmcli_json="[]"
        if [ -n "$nmcli_connections" ]; then
            nmcli_json=$(echo "$nmcli_connections" | while IFS= read -r line; do
                name=$(echo "$line" | cut -d: -f1)
                active="false"
                if [ "$name" = "$active_vpn_name" ]; then
                    active="true"
                fi
                echo "{\"name\":\"$name\",\"active\":$active,\"type\":\"nmcli\"}"
            done | jq -c -s '.')
        fi

        # Get sing-box connections as a JSON array
        singbox_dir="$HOME/.config/sing-box"
        singbox_json="[]"
        if [ -d "$singbox_dir" ]; then
            active_singbox_profile_file=$(get_active_singbox_profile_file)
            singbox_json=$(find "$singbox_dir" -maxdepth 1 -name "*.json" | while IFS= read -r file; do
                filename=$(basename "$file")
                # Format name from 'my-vpn.json' to 'My Vpn'
                formatted_name=$(basename "$filename" .json | sed -e 's/-/ /g' -e 's/\b\(.\)/\u\1/g')
                active="false"
                if [ "$filename" = "$active_singbox_profile_file" ]; then
                    active="true"
                fi
                echo "{\"name\":\"$formatted_name\",\"active\":$active,\"type\":\"sing-box\"}"
            done | jq -c -s '.')
        fi

        # Merge both JSON arrays
        echo "$nmcli_json" "$singbox_json" | jq -c -s '.[0] + .[1]'
        ;;
    listen-data)
        connections_json=$(bash "$0" list)
        status=$(bash "$0" status)
        connected_name=$(bash "$0" get-connected-name)
        if [ -z "$connected_name" ]; then
            connected_name="Not Connected"
        fi
        echo "{\"connections\": $connections_json, \"enabled\": $status, \"name\": \"$connected_name\"}"
        ;;
    connect)
        nmcli con up id "$2"
        # Save last used VPN info
        mkdir -p "$HOME/.cache"
        echo "$2|nmcli" > "$HOME/.cache/eww_last_vpn"
        ;;
    disconnect)
        active_vpn=$(get_active_nmcli_vpn)
        if [ -n "$active_vpn" ]; then
            nmcli con down id "$active_vpn"
        fi
        ;;
    connect-singbox)
        # Convert 'My Vpn Name' to 'my-vpn-name.json'
        filename=$(echo "$2" | sed -e 's/ /-/g' -e 's/\b\(.[^ ]*\)/\L\1/g').json
        config_path="$HOME/.config/sing-box/$filename"

        if [ -f "$config_path" ]; then
            # Stop any other running sing-box instance first
            pkill -f "sing-box run" || true
            # Wait a moment for the process to die
            sleep 0.5
            # Start the new profile in the background
            (nohup sing-box run -c "$config_path" >/dev/null 2>&1 &)
            # Save last used VPN info
            mkdir -p "$HOME/.cache"
            echo "$2|sing-box" > "$HOME/.cache/eww_last_vpn"
        else
            echo "Error: Config file not found at $config_path" >&2
            exit 1
        fi
        ;;
    disconnect-singbox)
        pkill -f "sing-box run" || true
        ;;
    toggle)
        # Check if any VPN is currently active
        active_vpn_name=$(get_active_vpn_name)
        
        if [ -n "$active_vpn_name" ]; then
            # VPN is active, disconnect it
            active_nmcli=$(get_active_nmcli_vpn)
            if [ -n "$active_nmcli" ]; then
                nmcli con down id "$active_nmcli"
            else
                # Must be sing-box
                pkill -f "sing-box run" || true
            fi
        else
            # No VPN is active, connect to the last used one
            # Check if there's a last used VPN stored
            last_used_file="$HOME/.cache/eww_last_vpn"
            
            if [ -f "$last_used_file" ]; then
                last_vpn_info=$(cat "$last_used_file")
                vpn_name=$(echo "$last_vpn_info" | cut -d'|' -f1)
                vpn_type=$(echo "$last_vpn_info" | cut -d'|' -f2)
                
                if [ "$vpn_type" = "nmcli" ]; then
                    nmcli con up id "$vpn_name"
                elif [ "$vpn_type" = "sing-box" ]; then
                    filename=$(echo "$vpn_name" | sed -e 's/ /-/g' -e 's/\b\(.[^ ]*\)/\L\1/g').json
                    config_path="$HOME/.config/sing-box/$filename"
                    if [ -f "$config_path" ]; then
                        pkill -f "sing-box run" || true
                        sleep 0.5
                        (nohup sing-box run -c "$config_path" >/dev/null 2>&1 &)
                    fi
                fi
            else
                # No last used VPN, try to connect to the first available one
                connections_json=$(bash "$0" list)
                first_connection=$(echo "$connections_json" | jq -r '.[0] // empty')
                
                if [ -n "$first_connection" ] && [ "$first_connection" != "null" ]; then
                    vpn_name=$(echo "$first_connection" | jq -r '.name')
                    vpn_type=$(echo "$first_connection" | jq -r '.type')
                    
                    if [ "$vpn_type" = "nmcli" ]; then
                        nmcli con up id "$vpn_name"
                    elif [ "$vpn_type" = "sing-box" ]; then
                        filename=$(echo "$vpn_name" | sed -e 's/ /-/g' -e 's/\b\(.[^ ]*\)/\L\1/g').json
                        config_path="$HOME/.config/sing-box/$filename"
                        if [ -f "$config_path" ]; then
                            pkill -f "sing-box run" || true
                            sleep 0.5
                            (nohup sing-box run -c "$config_path" >/dev/null 2>&1 &)
                        fi
                    fi
                fi
            fi
        fi
        ;;
    *)
        echo "Usage: $0 {status|list|connect|disconnect|connect-singbox|disconnect-singbox|toggle|...}"
        exit 1
        ;;
esac 